ARM GAS  /tmp/ccFBOlTg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32wbxx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemInit:
  27              	.LFB943:
  28              		.file 1 "Core/Src/system_stm32wbxx.c"
   1:Core/Src/system_stm32wbxx.c **** /**
   2:Core/Src/system_stm32wbxx.c ****   ******************************************************************************
   3:Core/Src/system_stm32wbxx.c ****   * @file    system_stm32wbxx.c
   4:Core/Src/system_stm32wbxx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32wbxx.c ****   * @brief   CMSIS Cortex Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32wbxx.c ****   *
   7:Core/Src/system_stm32wbxx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32wbxx.c ****   *   user application:
   9:Core/Src/system_stm32wbxx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32wbxx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32wbxx.c ****   *                      the "startup_stm32wbxx.s" file.
  12:Core/Src/system_stm32wbxx.c ****   *
  13:Core/Src/system_stm32wbxx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32wbxx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32wbxx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32wbxx.c ****   *
  17:Core/Src/system_stm32wbxx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32wbxx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32wbxx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32wbxx.c ****   *
  21:Core/Src/system_stm32wbxx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32wbxx.c ****   *   Then SystemInit() function is called, in "startup_stm32wbxx.s" file, to
  23:Core/Src/system_stm32wbxx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32wbxx.c ****   *
  25:Core/Src/system_stm32wbxx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32wbxx.c ****   *=============================================================================
  27:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32wbxx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32wbxx.c ****   *        SYSCLK(Hz)                             | 4000000
ARM GAS  /tmp/ccFBOlTg.s 			page 2


  31:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32wbxx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32wbxx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32wbxx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32wbxx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32wbxx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32wbxx.c ****   *        PLL_N                                  | 8
  43:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32wbxx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32wbxx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32wbxx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32wbxx.c ****   *        PLLSAI1_P                              | NA
  51:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32wbxx.c ****   *        PLLSAI1_Q                              | NA
  53:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32wbxx.c ****   *        PLLSAI1_R                              | NA
  55:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32wbxx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  57:Core/Src/system_stm32wbxx.c ****   *        SDIO and RNG clock                     |
  58:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  59:Core/Src/system_stm32wbxx.c ****   *=============================================================================
  60:Core/Src/system_stm32wbxx.c ****   ******************************************************************************
  61:Core/Src/system_stm32wbxx.c ****   * @attention
  62:Core/Src/system_stm32wbxx.c ****   *
  63:Core/Src/system_stm32wbxx.c ****   * Copyright (c) 2019-2021 STMicroelectronics.
  64:Core/Src/system_stm32wbxx.c ****   * All rights reserved.
  65:Core/Src/system_stm32wbxx.c ****   *
  66:Core/Src/system_stm32wbxx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  67:Core/Src/system_stm32wbxx.c ****   * in the root directory of this software component.
  68:Core/Src/system_stm32wbxx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  69:Core/Src/system_stm32wbxx.c ****   *
  70:Core/Src/system_stm32wbxx.c ****   ******************************************************************************
  71:Core/Src/system_stm32wbxx.c ****   */
  72:Core/Src/system_stm32wbxx.c **** 
  73:Core/Src/system_stm32wbxx.c **** /** @addtogroup CMSIS
  74:Core/Src/system_stm32wbxx.c ****   * @{
  75:Core/Src/system_stm32wbxx.c ****   */
  76:Core/Src/system_stm32wbxx.c **** 
  77:Core/Src/system_stm32wbxx.c **** /** @addtogroup stm32WBxx_system
  78:Core/Src/system_stm32wbxx.c ****   * @{
  79:Core/Src/system_stm32wbxx.c ****   */
  80:Core/Src/system_stm32wbxx.c **** 
  81:Core/Src/system_stm32wbxx.c **** /** @addtogroup stm32WBxx_System_Private_Includes
  82:Core/Src/system_stm32wbxx.c ****   * @{
  83:Core/Src/system_stm32wbxx.c ****   */
  84:Core/Src/system_stm32wbxx.c **** 
  85:Core/Src/system_stm32wbxx.c **** #include "stm32wbxx.h"
  86:Core/Src/system_stm32wbxx.c **** 
  87:Core/Src/system_stm32wbxx.c **** #if !defined  (HSE_VALUE)
ARM GAS  /tmp/ccFBOlTg.s 			page 3


  88:Core/Src/system_stm32wbxx.c ****   #define HSE_VALUE    (32000000UL) /*!< Value of the External oscillator in Hz */
  89:Core/Src/system_stm32wbxx.c **** #endif /* HSE_VALUE */
  90:Core/Src/system_stm32wbxx.c **** 
  91:Core/Src/system_stm32wbxx.c **** #if !defined  (MSI_VALUE)
  92:Core/Src/system_stm32wbxx.c ****    #define MSI_VALUE    (4000000UL) /*!< Value of the Internal oscillator in Hz*/
  93:Core/Src/system_stm32wbxx.c **** #endif /* MSI_VALUE */
  94:Core/Src/system_stm32wbxx.c **** 
  95:Core/Src/system_stm32wbxx.c **** #if !defined  (HSI_VALUE)
  96:Core/Src/system_stm32wbxx.c ****   #define HSI_VALUE    (16000000UL) /*!< Value of the Internal oscillator in Hz*/
  97:Core/Src/system_stm32wbxx.c **** #endif /* HSI_VALUE */
  98:Core/Src/system_stm32wbxx.c **** 
  99:Core/Src/system_stm32wbxx.c **** #if !defined  (LSI_VALUE) 
 100:Core/Src/system_stm32wbxx.c ****  #define LSI_VALUE  (32000UL)       /*!< Value of LSI in Hz*/
 101:Core/Src/system_stm32wbxx.c **** #endif /* LSI_VALUE */ 
 102:Core/Src/system_stm32wbxx.c **** 
 103:Core/Src/system_stm32wbxx.c **** #if !defined  (LSE_VALUE)
 104:Core/Src/system_stm32wbxx.c ****   #define LSE_VALUE    (32768UL)    /*!< Value of LSE in Hz*/
 105:Core/Src/system_stm32wbxx.c **** #endif /* LSE_VALUE */
 106:Core/Src/system_stm32wbxx.c **** 
 107:Core/Src/system_stm32wbxx.c **** /**
 108:Core/Src/system_stm32wbxx.c ****   * @}
 109:Core/Src/system_stm32wbxx.c ****   */
 110:Core/Src/system_stm32wbxx.c **** 
 111:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_TypesDefinitions
 112:Core/Src/system_stm32wbxx.c ****   * @{
 113:Core/Src/system_stm32wbxx.c ****   */
 114:Core/Src/system_stm32wbxx.c **** 
 115:Core/Src/system_stm32wbxx.c **** /**
 116:Core/Src/system_stm32wbxx.c ****   * @}
 117:Core/Src/system_stm32wbxx.c ****   */
 118:Core/Src/system_stm32wbxx.c **** 
 119:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Defines
 120:Core/Src/system_stm32wbxx.c ****   * @{
 121:Core/Src/system_stm32wbxx.c ****   */
 122:Core/Src/system_stm32wbxx.c **** 
 123:Core/Src/system_stm32wbxx.c **** /* Note: Following vector table addresses must be defined in line with linker
 124:Core/Src/system_stm32wbxx.c ****          configuration. */
 125:Core/Src/system_stm32wbxx.c **** /*!< Uncomment the following line if you need to relocate CPU1 CM4 and/or CPU2
 126:Core/Src/system_stm32wbxx.c ****      CM0+ vector table anywhere in Sram or Flash. Else vector table will be kept
 127:Core/Src/system_stm32wbxx.c ****      at address 0x00 which correspond to automatic remap of boot address selected */
 128:Core/Src/system_stm32wbxx.c **** /* #define USER_VECT_TAB_ADDRESS */
 129:Core/Src/system_stm32wbxx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 130:Core/Src/system_stm32wbxx.c ****  /*!< Uncomment this line for user vector table remap in Sram else user remap
 131:Core/Src/system_stm32wbxx.c ****       will be done in Flash. */
 132:Core/Src/system_stm32wbxx.c **** /* #define VECT_TAB_SRAM */
 133:Core/Src/system_stm32wbxx.c **** #if defined(VECT_TAB_SRAM)
 134:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 136:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 137:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 138:Core/Src/system_stm32wbxx.c **** #else
 139:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 141:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 142:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 143:Core/Src/system_stm32wbxx.c **** #endif
 144:Core/Src/system_stm32wbxx.c **** #endif
ARM GAS  /tmp/ccFBOlTg.s 			page 4


 145:Core/Src/system_stm32wbxx.c **** 
 146:Core/Src/system_stm32wbxx.c **** /**
 147:Core/Src/system_stm32wbxx.c ****   * @}
 148:Core/Src/system_stm32wbxx.c ****   */
 149:Core/Src/system_stm32wbxx.c **** 
 150:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Macros
 151:Core/Src/system_stm32wbxx.c ****   * @{
 152:Core/Src/system_stm32wbxx.c ****   */
 153:Core/Src/system_stm32wbxx.c **** 
 154:Core/Src/system_stm32wbxx.c **** /**
 155:Core/Src/system_stm32wbxx.c ****   * @}
 156:Core/Src/system_stm32wbxx.c ****   */
 157:Core/Src/system_stm32wbxx.c **** 
 158:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Variables
 159:Core/Src/system_stm32wbxx.c ****   * @{
 160:Core/Src/system_stm32wbxx.c ****   */
 161:Core/Src/system_stm32wbxx.c ****   /* The SystemCoreClock variable is updated in three ways:
 162:Core/Src/system_stm32wbxx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 163:Core/Src/system_stm32wbxx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 164:Core/Src/system_stm32wbxx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 165:Core/Src/system_stm32wbxx.c ****          Note: If you use this function to configure the system clock; then there
 166:Core/Src/system_stm32wbxx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 167:Core/Src/system_stm32wbxx.c ****                variable is updated automatically.
 168:Core/Src/system_stm32wbxx.c ****   */
 169:Core/Src/system_stm32wbxx.c ****   uint32_t SystemCoreClock  = 4000000UL ; /*CPU1: M4 on MSI clock after startup (4MHz)*/
 170:Core/Src/system_stm32wbxx.c **** 
 171:Core/Src/system_stm32wbxx.c ****   const uint32_t AHBPrescTable[16UL] = {1UL, 3UL, 5UL, 1UL, 1UL, 6UL, 10UL, 32UL, 2UL, 4UL, 8UL, 16
 172:Core/Src/system_stm32wbxx.c **** 
 173:Core/Src/system_stm32wbxx.c ****   const uint32_t APBPrescTable[8UL]  = {0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL};
 174:Core/Src/system_stm32wbxx.c **** 
 175:Core/Src/system_stm32wbxx.c ****   const uint32_t MSIRangeTable[16UL] = {100000UL, 200000UL, 400000UL, 800000UL, 1000000UL, 2000000U
 176:Core/Src/system_stm32wbxx.c ****                                       4000000UL, 8000000UL, 16000000UL, 24000000UL, 32000000UL, 480
 177:Core/Src/system_stm32wbxx.c **** 
 178:Core/Src/system_stm32wbxx.c **** #if defined(STM32WB55xx) || defined(STM32WB5Mxx) || defined(STM32WB35xx) || defined (STM32WB15xx) |
 179:Core/Src/system_stm32wbxx.c ****   const uint32_t SmpsPrescalerTable[4UL][6UL]={{1UL,3UL,2UL,2UL,1UL,2UL}, \
 180:Core/Src/system_stm32wbxx.c ****                                         {2UL,6UL,4UL,3UL,2UL,4UL}, \
 181:Core/Src/system_stm32wbxx.c ****                                         {4UL,12UL,8UL,6UL,4UL,8UL}, \
 182:Core/Src/system_stm32wbxx.c ****                                         {4UL,12UL,8UL,6UL,4UL,8UL}};
 183:Core/Src/system_stm32wbxx.c **** #endif
 184:Core/Src/system_stm32wbxx.c **** 
 185:Core/Src/system_stm32wbxx.c **** /**
 186:Core/Src/system_stm32wbxx.c ****   * @}
 187:Core/Src/system_stm32wbxx.c ****   */
 188:Core/Src/system_stm32wbxx.c **** 
 189:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_FunctionPrototypes
 190:Core/Src/system_stm32wbxx.c ****   * @{
 191:Core/Src/system_stm32wbxx.c ****   */
 192:Core/Src/system_stm32wbxx.c **** 
 193:Core/Src/system_stm32wbxx.c **** /**
 194:Core/Src/system_stm32wbxx.c ****   * @}
 195:Core/Src/system_stm32wbxx.c ****   */
 196:Core/Src/system_stm32wbxx.c **** 
 197:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Functions
 198:Core/Src/system_stm32wbxx.c ****   * @{
 199:Core/Src/system_stm32wbxx.c ****   */
 200:Core/Src/system_stm32wbxx.c **** 
 201:Core/Src/system_stm32wbxx.c **** /**
ARM GAS  /tmp/ccFBOlTg.s 			page 5


 202:Core/Src/system_stm32wbxx.c ****   * @brief  Setup the microcontroller system.
 203:Core/Src/system_stm32wbxx.c ****   * @param  None
 204:Core/Src/system_stm32wbxx.c ****   * @retval None
 205:Core/Src/system_stm32wbxx.c ****   */
 206:Core/Src/system_stm32wbxx.c **** void SystemInit(void)
 207:Core/Src/system_stm32wbxx.c **** {
  29              		.loc 1 207 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 208:Core/Src/system_stm32wbxx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 209:Core/Src/system_stm32wbxx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 210:Core/Src/system_stm32wbxx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 211:Core/Src/system_stm32wbxx.c **** #endif
 212:Core/Src/system_stm32wbxx.c **** 
 213:Core/Src/system_stm32wbxx.c ****   /* FPU settings ------------------------------------------------------------*/
 214:Core/Src/system_stm32wbxx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 215:Core/Src/system_stm32wbxx.c ****     SCB->CPACR |= ((3UL << (10UL*2UL))|(3UL << (11UL*2UL)));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 215 5 view .LVU1
  35              		.loc 1 215 16 is_stmt 0 view .LVU2
  36 0000 164A     		ldr	r2, .L2
  37 0002 D2F88830 		ldr	r3, [r2, #136]
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C2F88830 		str	r3, [r2, #136]
 216:Core/Src/system_stm32wbxx.c ****   #endif
 217:Core/Src/system_stm32wbxx.c ****   
 218:Core/Src/system_stm32wbxx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 219:Core/Src/system_stm32wbxx.c ****   /* Set MSION bit */
 220:Core/Src/system_stm32wbxx.c ****   RCC->CR |= RCC_CR_MSION;
  40              		.loc 1 220 3 is_stmt 1 view .LVU3
  41              		.loc 1 220 11 is_stmt 0 view .LVU4
  42 000e 4FF0B043 		mov	r3, #1476395008
  43 0012 1A68     		ldr	r2, [r3]
  44 0014 42F00102 		orr	r2, r2, #1
  45 0018 1A60     		str	r2, [r3]
 221:Core/Src/system_stm32wbxx.c **** 
 222:Core/Src/system_stm32wbxx.c ****   /* Reset CFGR register */
 223:Core/Src/system_stm32wbxx.c ****   RCC->CFGR = 0x00070000U;
  46              		.loc 1 223 3 is_stmt 1 view .LVU5
  47              		.loc 1 223 13 is_stmt 0 view .LVU6
  48 001a 4FF4E022 		mov	r2, #458752
  49 001e 9A60     		str	r2, [r3, #8]
 224:Core/Src/system_stm32wbxx.c **** 
 225:Core/Src/system_stm32wbxx.c ****   /* Reset PLLSAI1ON, PLLON, HSECSSON, HSEON, HSION, and MSIPLLON bits */
 226:Core/Src/system_stm32wbxx.c ****   RCC->CR &= (uint32_t)0xFAF6FEFBU;
  50              		.loc 1 226 3 is_stmt 1 view .LVU7
  51              		.loc 1 226 11 is_stmt 0 view .LVU8
  52 0020 1968     		ldr	r1, [r3]
  53 0022 A2F1A262 		sub	r2, r2, #84934656
  54 0026 A2F20512 		subw	r2, r2, #261
  55 002a 0A40     		ands	r2, r2, r1
  56 002c 1A60     		str	r2, [r3]
 227:Core/Src/system_stm32wbxx.c **** 
 228:Core/Src/system_stm32wbxx.c ****   /*!< Reset LSI1 and LSI2 bits */
 229:Core/Src/system_stm32wbxx.c ****   RCC->CSR &= (uint32_t)0xFFFFFFFAU;
  57              		.loc 1 229 3 is_stmt 1 view .LVU9
ARM GAS  /tmp/ccFBOlTg.s 			page 6


  58              		.loc 1 229 12 is_stmt 0 view .LVU10
  59 002e D3F89420 		ldr	r2, [r3, #148]
  60 0032 22F00502 		bic	r2, r2, #5
  61 0036 C3F89420 		str	r2, [r3, #148]
 230:Core/Src/system_stm32wbxx.c ****   
 231:Core/Src/system_stm32wbxx.c ****   /*!< Reset HSI48ON  bit */
 232:Core/Src/system_stm32wbxx.c ****   RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
  62              		.loc 1 232 3 is_stmt 1 view .LVU11
  63              		.loc 1 232 14 is_stmt 0 view .LVU12
  64 003a D3F89820 		ldr	r2, [r3, #152]
  65 003e 22F00102 		bic	r2, r2, #1
  66 0042 C3F89820 		str	r2, [r3, #152]
 233:Core/Src/system_stm32wbxx.c ****     
 234:Core/Src/system_stm32wbxx.c ****   /* Reset PLLCFGR register */
 235:Core/Src/system_stm32wbxx.c ****   RCC->PLLCFGR = 0x22041000U;
  67              		.loc 1 235 3 is_stmt 1 view .LVU13
  68              		.loc 1 235 16 is_stmt 0 view .LVU14
  69 0046 064A     		ldr	r2, .L2+4
  70 0048 DA60     		str	r2, [r3, #12]
 236:Core/Src/system_stm32wbxx.c **** 
 237:Core/Src/system_stm32wbxx.c **** #if defined(STM32WB55xx) || defined(STM32WB5Mxx)
 238:Core/Src/system_stm32wbxx.c ****   /* Reset PLLSAI1CFGR register */
 239:Core/Src/system_stm32wbxx.c ****   RCC->PLLSAI1CFGR = 0x22041000U;
  71              		.loc 1 239 3 is_stmt 1 view .LVU15
  72              		.loc 1 239 20 is_stmt 0 view .LVU16
  73 004a 1A61     		str	r2, [r3, #16]
 240:Core/Src/system_stm32wbxx.c **** #endif
 241:Core/Src/system_stm32wbxx.c ****   
 242:Core/Src/system_stm32wbxx.c ****   /* Reset HSEBYP bit */
 243:Core/Src/system_stm32wbxx.c ****   RCC->CR &= 0xFFFBFFFFU;
  74              		.loc 1 243 3 is_stmt 1 view .LVU17
  75              		.loc 1 243 11 is_stmt 0 view .LVU18
  76 004c 1A68     		ldr	r2, [r3]
  77 004e 22F48022 		bic	r2, r2, #262144
  78 0052 1A60     		str	r2, [r3]
 244:Core/Src/system_stm32wbxx.c **** 
 245:Core/Src/system_stm32wbxx.c ****   /* Disable all interrupts */
 246:Core/Src/system_stm32wbxx.c ****   RCC->CIER = 0x00000000;
  79              		.loc 1 246 3 is_stmt 1 view .LVU19
  80              		.loc 1 246 13 is_stmt 0 view .LVU20
  81 0054 0022     		movs	r2, #0
  82 0056 9A61     		str	r2, [r3, #24]
 247:Core/Src/system_stm32wbxx.c **** }
  83              		.loc 1 247 1 view .LVU21
  84 0058 7047     		bx	lr
  85              	.L3:
  86 005a 00BF     		.align	2
  87              	.L2:
  88 005c 00ED00E0 		.word	-536810240
  89 0060 00100422 		.word	570691584
  90              		.cfi_endproc
  91              	.LFE943:
  93              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  94              		.align	1
  95              		.global	SystemCoreClockUpdate
  96              		.syntax unified
  97              		.thumb
ARM GAS  /tmp/ccFBOlTg.s 			page 7


  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	SystemCoreClockUpdate:
 102              	.LFB944:
 248:Core/Src/system_stm32wbxx.c **** 
 249:Core/Src/system_stm32wbxx.c **** /**
 250:Core/Src/system_stm32wbxx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 251:Core/Src/system_stm32wbxx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 252:Core/Src/system_stm32wbxx.c ****   *         be used by the user application to setup the SysTick timer or configure
 253:Core/Src/system_stm32wbxx.c ****   *         other parameters.
 254:Core/Src/system_stm32wbxx.c ****   *
 255:Core/Src/system_stm32wbxx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 256:Core/Src/system_stm32wbxx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 257:Core/Src/system_stm32wbxx.c ****   *         based on this variable will be incorrect.
 258:Core/Src/system_stm32wbxx.c ****   *
 259:Core/Src/system_stm32wbxx.c ****   * @note   - The system frequency computed by this function is not the real
 260:Core/Src/system_stm32wbxx.c ****   *           frequency in the chip. It is calculated based on the predefined
 261:Core/Src/system_stm32wbxx.c ****   *           constant and the selected clock source:
 262:Core/Src/system_stm32wbxx.c ****   *
 263:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 264:Core/Src/system_stm32wbxx.c ****   *
 265:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 266:Core/Src/system_stm32wbxx.c ****   *
 267:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 268:Core/Src/system_stm32wbxx.c ****   *
 269:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 270:Core/Src/system_stm32wbxx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 271:Core/Src/system_stm32wbxx.c ****   *
 272:Core/Src/system_stm32wbxx.c ****   *         (*) MSI_VALUE is a constant defined in stm32wbxx_hal.h file (default value
 273:Core/Src/system_stm32wbxx.c ****   *             4 MHz) but the real value may vary depending on the variations
 274:Core/Src/system_stm32wbxx.c ****   *             in voltage and temperature.
 275:Core/Src/system_stm32wbxx.c ****   *
 276:Core/Src/system_stm32wbxx.c ****   *         (**) HSI_VALUE is a constant defined in stm32wbxx_hal_conf.h file (default value
 277:Core/Src/system_stm32wbxx.c ****   *              16 MHz) but the real value may vary depending on the variations
 278:Core/Src/system_stm32wbxx.c ****   *              in voltage and temperature.
 279:Core/Src/system_stm32wbxx.c ****   *
 280:Core/Src/system_stm32wbxx.c ****   *         (***) HSE_VALUE is a constant defined in stm32wbxx_hal_conf.h file (default value
 281:Core/Src/system_stm32wbxx.c ****   *              32 MHz), user has to ensure that HSE_VALUE is same as the real
 282:Core/Src/system_stm32wbxx.c ****   *              frequency of the crystal used. Otherwise, this function may
 283:Core/Src/system_stm32wbxx.c ****   *              have wrong result.
 284:Core/Src/system_stm32wbxx.c ****   *
 285:Core/Src/system_stm32wbxx.c ****   *         - The result of this function could be not correct when using fractional
 286:Core/Src/system_stm32wbxx.c ****   *           value for HSE crystal.
 287:Core/Src/system_stm32wbxx.c ****   *
 288:Core/Src/system_stm32wbxx.c ****   * @param  None
 289:Core/Src/system_stm32wbxx.c ****   * @retval None
 290:Core/Src/system_stm32wbxx.c ****   */
 291:Core/Src/system_stm32wbxx.c **** void SystemCoreClockUpdate(void)
 292:Core/Src/system_stm32wbxx.c **** {
 103              		.loc 1 292 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 293:Core/Src/system_stm32wbxx.c ****   uint32_t tmp, msirange, pllvco, pllr, pllsource , pllm;
 108              		.loc 1 293 3 view .LVU23
 294:Core/Src/system_stm32wbxx.c **** 
ARM GAS  /tmp/ccFBOlTg.s 			page 8


 295:Core/Src/system_stm32wbxx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 296:Core/Src/system_stm32wbxx.c **** 
 297:Core/Src/system_stm32wbxx.c ****   /*MSI frequency range in Hz*/
 298:Core/Src/system_stm32wbxx.c ****   msirange = MSIRangeTable[(RCC->CR & RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos];
 109              		.loc 1 298 3 view .LVU24
 110              		.loc 1 298 32 is_stmt 0 view .LVU25
 111 0000 4FF0B042 		mov	r2, #1476395008
 112 0004 1368     		ldr	r3, [r2]
 113              		.loc 1 298 56 view .LVU26
 114 0006 C3F30313 		ubfx	r3, r3, #4, #4
 115              		.loc 1 298 12 view .LVU27
 116 000a 2949     		ldr	r1, .L17
 117 000c 51F82310 		ldr	r1, [r1, r3, lsl #2]
 118              	.LVL0:
 299:Core/Src/system_stm32wbxx.c **** 
 300:Core/Src/system_stm32wbxx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 301:Core/Src/system_stm32wbxx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 119              		.loc 1 301 3 is_stmt 1 view .LVU28
 120              		.loc 1 301 14 is_stmt 0 view .LVU29
 121 0010 9368     		ldr	r3, [r2, #8]
 122              		.loc 1 301 21 view .LVU30
 123 0012 03F00C03 		and	r3, r3, #12
 124              		.loc 1 301 3 view .LVU31
 125 0016 0C2B     		cmp	r3, #12
 126 0018 46D8     		bhi	.L5
 127 001a DFE803F0 		tbb	[pc, r3]
 128              	.L7:
 129 001e 07       		.byte	(.L10-.L7)/2
 130 001f 45       		.byte	(.L5-.L7)/2
 131 0020 45       		.byte	(.L5-.L7)/2
 132 0021 45       		.byte	(.L5-.L7)/2
 133 0022 17       		.byte	(.L9-.L7)/2
 134 0023 45       		.byte	(.L5-.L7)/2
 135 0024 45       		.byte	(.L5-.L7)/2
 136 0025 45       		.byte	(.L5-.L7)/2
 137 0026 1B       		.byte	(.L8-.L7)/2
 138 0027 45       		.byte	(.L5-.L7)/2
 139 0028 45       		.byte	(.L5-.L7)/2
 140 0029 45       		.byte	(.L5-.L7)/2
 141 002a 1F       		.byte	(.L6-.L7)/2
 142 002b 00       		.p2align 1
 143              	.L10:
 302:Core/Src/system_stm32wbxx.c ****   {
 303:Core/Src/system_stm32wbxx.c ****     case 0x00:   /* MSI used as system clock source */
 304:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = msirange;
 144              		.loc 1 304 7 is_stmt 1 view .LVU32
 145              		.loc 1 304 23 is_stmt 0 view .LVU33
 146 002c 214B     		ldr	r3, .L17+4
 147 002e 1960     		str	r1, [r3]
 305:Core/Src/system_stm32wbxx.c ****       break;
 148              		.loc 1 305 7 is_stmt 1 view .LVU34
 149              	.LVL1:
 150              	.L11:
 306:Core/Src/system_stm32wbxx.c **** 
 307:Core/Src/system_stm32wbxx.c ****     case 0x04:  /* HSI used as system clock source */
 308:Core/Src/system_stm32wbxx.c ****       /* HSI used as system clock source */
 309:Core/Src/system_stm32wbxx.c ****         SystemCoreClock = HSI_VALUE;
ARM GAS  /tmp/ccFBOlTg.s 			page 9


 310:Core/Src/system_stm32wbxx.c ****       break;
 311:Core/Src/system_stm32wbxx.c **** 
 312:Core/Src/system_stm32wbxx.c ****     case 0x08:  /* HSE used as system clock source */
 313:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = HSE_VALUE;
 314:Core/Src/system_stm32wbxx.c ****       break;
 315:Core/Src/system_stm32wbxx.c **** 
 316:Core/Src/system_stm32wbxx.c ****     case 0x0C: /* PLL used as system clock  source */
 317:Core/Src/system_stm32wbxx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 318:Core/Src/system_stm32wbxx.c ****          SYSCLK = PLL_VCO / PLLR
 319:Core/Src/system_stm32wbxx.c ****          */
 320:Core/Src/system_stm32wbxx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 321:Core/Src/system_stm32wbxx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL ;
 322:Core/Src/system_stm32wbxx.c **** 
 323:Core/Src/system_stm32wbxx.c ****       if(pllsource == 0x02UL) /* HSI used as PLL clock source */
 324:Core/Src/system_stm32wbxx.c ****       {
 325:Core/Src/system_stm32wbxx.c ****         pllvco = (HSI_VALUE / pllm);
 326:Core/Src/system_stm32wbxx.c ****       }
 327:Core/Src/system_stm32wbxx.c ****       else if(pllsource == 0x03UL) /* HSE used as PLL clock source */
 328:Core/Src/system_stm32wbxx.c ****       {
 329:Core/Src/system_stm32wbxx.c ****         pllvco = (HSE_VALUE / pllm);
 330:Core/Src/system_stm32wbxx.c ****       }
 331:Core/Src/system_stm32wbxx.c ****       else /* MSI used as PLL clock source */
 332:Core/Src/system_stm32wbxx.c ****       {
 333:Core/Src/system_stm32wbxx.c ****         pllvco = (msirange / pllm);
 334:Core/Src/system_stm32wbxx.c ****       }
 335:Core/Src/system_stm32wbxx.c ****       
 336:Core/Src/system_stm32wbxx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 337:Core/Src/system_stm32wbxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 338:Core/Src/system_stm32wbxx.c ****       
 339:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = pllvco/pllr;
 340:Core/Src/system_stm32wbxx.c ****       break;
 341:Core/Src/system_stm32wbxx.c **** 
 342:Core/Src/system_stm32wbxx.c ****     default:
 343:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = msirange;
 344:Core/Src/system_stm32wbxx.c ****       break;
 345:Core/Src/system_stm32wbxx.c ****   }
 346:Core/Src/system_stm32wbxx.c ****   
 347:Core/Src/system_stm32wbxx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 348:Core/Src/system_stm32wbxx.c ****   /* Get HCLK1 prescaler */
 349:Core/Src/system_stm32wbxx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 151              		.loc 1 349 3 view .LVU35
 152              		.loc 1 349 28 is_stmt 0 view .LVU36
 153 0030 4FF0B043 		mov	r3, #1476395008
 154 0034 9B68     		ldr	r3, [r3, #8]
 155              		.loc 1 349 52 view .LVU37
 156 0036 C3F30313 		ubfx	r3, r3, #4, #4
 157              		.loc 1 349 7 view .LVU38
 158 003a 1F4A     		ldr	r2, .L17+8
 159 003c 52F82310 		ldr	r1, [r2, r3, lsl #2]
 160              	.LVL2:
 350:Core/Src/system_stm32wbxx.c ****   /* HCLK clock frequency */
 351:Core/Src/system_stm32wbxx.c ****   SystemCoreClock = SystemCoreClock / tmp;
 161              		.loc 1 351 3 is_stmt 1 view .LVU39
 162              		.loc 1 351 37 is_stmt 0 view .LVU40
 163 0040 1C4A     		ldr	r2, .L17+4
 164 0042 1368     		ldr	r3, [r2]
 165 0044 B3FBF1F3 		udiv	r3, r3, r1
ARM GAS  /tmp/ccFBOlTg.s 			page 10


 166              		.loc 1 351 19 view .LVU41
 167 0048 1360     		str	r3, [r2]
 352:Core/Src/system_stm32wbxx.c **** 
 353:Core/Src/system_stm32wbxx.c **** }
 168              		.loc 1 353 1 view .LVU42
 169 004a 7047     		bx	lr
 170              	.LVL3:
 171              	.L9:
 309:Core/Src/system_stm32wbxx.c ****       break;
 172              		.loc 1 309 9 is_stmt 1 view .LVU43
 309:Core/Src/system_stm32wbxx.c ****       break;
 173              		.loc 1 309 25 is_stmt 0 view .LVU44
 174 004c 194B     		ldr	r3, .L17+4
 175 004e 1B4A     		ldr	r2, .L17+12
 176 0050 1A60     		str	r2, [r3]
 310:Core/Src/system_stm32wbxx.c **** 
 177              		.loc 1 310 7 is_stmt 1 view .LVU45
 178 0052 EDE7     		b	.L11
 179              	.L8:
 313:Core/Src/system_stm32wbxx.c ****       break;
 180              		.loc 1 313 7 view .LVU46
 313:Core/Src/system_stm32wbxx.c ****       break;
 181              		.loc 1 313 23 is_stmt 0 view .LVU47
 182 0054 174B     		ldr	r3, .L17+4
 183 0056 1A4A     		ldr	r2, .L17+16
 184 0058 1A60     		str	r2, [r3]
 314:Core/Src/system_stm32wbxx.c **** 
 185              		.loc 1 314 7 is_stmt 1 view .LVU48
 186 005a E9E7     		b	.L11
 187              	.L6:
 320:Core/Src/system_stm32wbxx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL ;
 188              		.loc 1 320 7 view .LVU49
 320:Core/Src/system_stm32wbxx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL ;
 189              		.loc 1 320 23 is_stmt 0 view .LVU50
 190 005c 4FF0B043 		mov	r3, #1476395008
 191 0060 DA68     		ldr	r2, [r3, #12]
 320:Core/Src/system_stm32wbxx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL ;
 192              		.loc 1 320 17 view .LVU51
 193 0062 02F00302 		and	r2, r2, #3
 194              	.LVL4:
 321:Core/Src/system_stm32wbxx.c **** 
 195              		.loc 1 321 7 is_stmt 1 view .LVU52
 321:Core/Src/system_stm32wbxx.c **** 
 196              		.loc 1 321 19 is_stmt 0 view .LVU53
 197 0066 DB68     		ldr	r3, [r3, #12]
 321:Core/Src/system_stm32wbxx.c **** 
 198              		.loc 1 321 49 view .LVU54
 199 0068 C3F30213 		ubfx	r3, r3, #4, #3
 321:Core/Src/system_stm32wbxx.c **** 
 200              		.loc 1 321 12 view .LVU55
 201 006c 0133     		adds	r3, r3, #1
 202              	.LVL5:
 323:Core/Src/system_stm32wbxx.c ****       {
 203              		.loc 1 323 7 is_stmt 1 view .LVU56
 323:Core/Src/system_stm32wbxx.c ****       {
 204              		.loc 1 323 9 is_stmt 0 view .LVU57
 205 006e 022A     		cmp	r2, #2
ARM GAS  /tmp/ccFBOlTg.s 			page 11


 206 0070 12D0     		beq	.L15
 327:Core/Src/system_stm32wbxx.c ****       {
 207              		.loc 1 327 12 is_stmt 1 view .LVU58
 327:Core/Src/system_stm32wbxx.c ****       {
 208              		.loc 1 327 14 is_stmt 0 view .LVU59
 209 0072 032A     		cmp	r2, #3
 210 0074 14D0     		beq	.L16
 333:Core/Src/system_stm32wbxx.c ****       }
 211              		.loc 1 333 9 is_stmt 1 view .LVU60
 333:Core/Src/system_stm32wbxx.c ****       }
 212              		.loc 1 333 16 is_stmt 0 view .LVU61
 213 0076 B1FBF3F3 		udiv	r3, r1, r3
 214              	.LVL6:
 215              	.L13:
 336:Core/Src/system_stm32wbxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 216              		.loc 1 336 7 is_stmt 1 view .LVU62
 336:Core/Src/system_stm32wbxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 217              		.loc 1 336 30 is_stmt 0 view .LVU63
 218 007a 4FF0B041 		mov	r1, #1476395008
 219              	.LVL7:
 336:Core/Src/system_stm32wbxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 220              		.loc 1 336 30 view .LVU64
 221 007e CA68     		ldr	r2, [r1, #12]
 336:Core/Src/system_stm32wbxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 222              		.loc 1 336 60 view .LVU65
 223 0080 C2F30622 		ubfx	r2, r2, #8, #7
 336:Core/Src/system_stm32wbxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 224              		.loc 1 336 14 view .LVU66
 225 0084 03FB02F3 		mul	r3, r3, r2
 226              	.LVL8:
 337:Core/Src/system_stm32wbxx.c ****       
 227              		.loc 1 337 7 is_stmt 1 view .LVU67
 337:Core/Src/system_stm32wbxx.c ****       
 228              		.loc 1 337 20 is_stmt 0 view .LVU68
 229 0088 CA68     		ldr	r2, [r1, #12]
 337:Core/Src/system_stm32wbxx.c ****       
 230              		.loc 1 337 50 view .LVU69
 231 008a 520F     		lsrs	r2, r2, #29
 337:Core/Src/system_stm32wbxx.c ****       
 232              		.loc 1 337 12 view .LVU70
 233 008c 0132     		adds	r2, r2, #1
 234              	.LVL9:
 339:Core/Src/system_stm32wbxx.c ****       break;
 235              		.loc 1 339 7 is_stmt 1 view .LVU71
 339:Core/Src/system_stm32wbxx.c ****       break;
 236              		.loc 1 339 31 is_stmt 0 view .LVU72
 237 008e B3FBF2F3 		udiv	r3, r3, r2
 238              	.LVL10:
 339:Core/Src/system_stm32wbxx.c ****       break;
 239              		.loc 1 339 23 view .LVU73
 240 0092 084A     		ldr	r2, .L17+4
 241              	.LVL11:
 339:Core/Src/system_stm32wbxx.c ****       break;
 242              		.loc 1 339 23 view .LVU74
 243 0094 1360     		str	r3, [r2]
 340:Core/Src/system_stm32wbxx.c **** 
 244              		.loc 1 340 7 is_stmt 1 view .LVU75
ARM GAS  /tmp/ccFBOlTg.s 			page 12


 245 0096 CBE7     		b	.L11
 246              	.LVL12:
 247              	.L15:
 325:Core/Src/system_stm32wbxx.c ****       }
 248              		.loc 1 325 9 view .LVU76
 325:Core/Src/system_stm32wbxx.c ****       }
 249              		.loc 1 325 16 is_stmt 0 view .LVU77
 250 0098 084A     		ldr	r2, .L17+12
 251              	.LVL13:
 325:Core/Src/system_stm32wbxx.c ****       }
 252              		.loc 1 325 16 view .LVU78
 253 009a B2FBF3F3 		udiv	r3, r2, r3
 254              	.LVL14:
 325:Core/Src/system_stm32wbxx.c ****       }
 255              		.loc 1 325 16 view .LVU79
 256 009e ECE7     		b	.L13
 257              	.LVL15:
 258              	.L16:
 329:Core/Src/system_stm32wbxx.c ****       }
 259              		.loc 1 329 9 is_stmt 1 view .LVU80
 329:Core/Src/system_stm32wbxx.c ****       }
 260              		.loc 1 329 16 is_stmt 0 view .LVU81
 261 00a0 074A     		ldr	r2, .L17+16
 262              	.LVL16:
 329:Core/Src/system_stm32wbxx.c ****       }
 263              		.loc 1 329 16 view .LVU82
 264 00a2 B2FBF3F3 		udiv	r3, r2, r3
 265              	.LVL17:
 329:Core/Src/system_stm32wbxx.c ****       }
 266              		.loc 1 329 16 view .LVU83
 267 00a6 E8E7     		b	.L13
 268              	.LVL18:
 269              	.L5:
 343:Core/Src/system_stm32wbxx.c ****       break;
 270              		.loc 1 343 7 is_stmt 1 view .LVU84
 343:Core/Src/system_stm32wbxx.c ****       break;
 271              		.loc 1 343 23 is_stmt 0 view .LVU85
 272 00a8 024B     		ldr	r3, .L17+4
 273 00aa 1960     		str	r1, [r3]
 344:Core/Src/system_stm32wbxx.c ****   }
 274              		.loc 1 344 7 is_stmt 1 view .LVU86
 275 00ac C0E7     		b	.L11
 276              	.L18:
 277 00ae 00BF     		.align	2
 278              	.L17:
 279 00b0 00000000 		.word	.LANCHOR0
 280 00b4 00000000 		.word	.LANCHOR1
 281 00b8 00000000 		.word	.LANCHOR2
 282 00bc 0024F400 		.word	16000000
 283 00c0 0048E801 		.word	32000000
 284              		.cfi_endproc
 285              	.LFE944:
 287              		.global	SmpsPrescalerTable
 288              		.global	MSIRangeTable
 289              		.global	APBPrescTable
 290              		.global	AHBPrescTable
 291              		.global	SystemCoreClock
ARM GAS  /tmp/ccFBOlTg.s 			page 13


 292              		.section	.data.SystemCoreClock,"aw"
 293              		.align	2
 294              		.set	.LANCHOR1,. + 0
 297              	SystemCoreClock:
 298 0000 00093D00 		.word	4000000
 299              		.section	.rodata.AHBPrescTable,"a"
 300              		.align	2
 301              		.set	.LANCHOR2,. + 0
 304              	AHBPrescTable:
 305 0000 01000000 		.word	1
 306 0004 03000000 		.word	3
 307 0008 05000000 		.word	5
 308 000c 01000000 		.word	1
 309 0010 01000000 		.word	1
 310 0014 06000000 		.word	6
 311 0018 0A000000 		.word	10
 312 001c 20000000 		.word	32
 313 0020 02000000 		.word	2
 314 0024 04000000 		.word	4
 315 0028 08000000 		.word	8
 316 002c 10000000 		.word	16
 317 0030 40000000 		.word	64
 318 0034 80000000 		.word	128
 319 0038 00010000 		.word	256
 320 003c 00020000 		.word	512
 321              		.section	.rodata.APBPrescTable,"a"
 322              		.align	2
 325              	APBPrescTable:
 326 0000 00000000 		.word	0
 327 0004 00000000 		.word	0
 328 0008 00000000 		.word	0
 329 000c 00000000 		.word	0
 330 0010 01000000 		.word	1
 331 0014 02000000 		.word	2
 332 0018 03000000 		.word	3
 333 001c 04000000 		.word	4
 334              		.section	.rodata.MSIRangeTable,"a"
 335              		.align	2
 336              		.set	.LANCHOR0,. + 0
 339              	MSIRangeTable:
 340 0000 A0860100 		.word	100000
 341 0004 400D0300 		.word	200000
 342 0008 801A0600 		.word	400000
 343 000c 00350C00 		.word	800000
 344 0010 40420F00 		.word	1000000
 345 0014 80841E00 		.word	2000000
 346 0018 00093D00 		.word	4000000
 347 001c 00127A00 		.word	8000000
 348 0020 0024F400 		.word	16000000
 349 0024 00366E01 		.word	24000000
 350 0028 0048E801 		.word	32000000
 351 002c 006CDC02 		.word	48000000
 352 0030 00000000 		.word	0
 353 0034 00000000 		.word	0
 354 0038 00000000 		.word	0
 355 003c 00000000 		.word	0
 356              		.section	.rodata.SmpsPrescalerTable,"a"
ARM GAS  /tmp/ccFBOlTg.s 			page 14


 357              		.align	2
 360              	SmpsPrescalerTable:
 361 0000 01000000 		.word	1
 362 0004 03000000 		.word	3
 363 0008 02000000 		.word	2
 364 000c 02000000 		.word	2
 365 0010 01000000 		.word	1
 366 0014 02000000 		.word	2
 367 0018 02000000 		.word	2
 368 001c 06000000 		.word	6
 369 0020 04000000 		.word	4
 370 0024 03000000 		.word	3
 371 0028 02000000 		.word	2
 372 002c 04000000 		.word	4
 373 0030 04000000 		.word	4
 374 0034 0C000000 		.word	12
 375 0038 08000000 		.word	8
 376 003c 06000000 		.word	6
 377 0040 04000000 		.word	4
 378 0044 08000000 		.word	8
 379 0048 04000000 		.word	4
 380 004c 0C000000 		.word	12
 381 0050 08000000 		.word	8
 382 0054 06000000 		.word	6
 383 0058 04000000 		.word	4
 384 005c 08000000 		.word	8
 385              		.text
 386              	.Letext0:
 387              		.file 2 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stdint.h"
 388              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 389              		.file 4 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 390              		.file 5 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 391              		.file 6 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 392              		.file 7 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 393              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_uart.h"
 394              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
ARM GAS  /tmp/ccFBOlTg.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32wbxx.c
     /tmp/ccFBOlTg.s:18     .text.SystemInit:0000000000000000 $t
     /tmp/ccFBOlTg.s:26     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccFBOlTg.s:88     .text.SystemInit:000000000000005c $d
     /tmp/ccFBOlTg.s:94     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccFBOlTg.s:101    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccFBOlTg.s:129    .text.SystemCoreClockUpdate:000000000000001e $d
     /tmp/ccFBOlTg.s:279    .text.SystemCoreClockUpdate:00000000000000b0 $d
     /tmp/ccFBOlTg.s:360    .rodata.SmpsPrescalerTable:0000000000000000 SmpsPrescalerTable
     /tmp/ccFBOlTg.s:339    .rodata.MSIRangeTable:0000000000000000 MSIRangeTable
     /tmp/ccFBOlTg.s:325    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccFBOlTg.s:304    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccFBOlTg.s:297    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccFBOlTg.s:293    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccFBOlTg.s:300    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccFBOlTg.s:322    .rodata.APBPrescTable:0000000000000000 $d
     /tmp/ccFBOlTg.s:335    .rodata.MSIRangeTable:0000000000000000 $d
     /tmp/ccFBOlTg.s:357    .rodata.SmpsPrescalerTable:0000000000000000 $d
     /tmp/ccFBOlTg.s:142    .text.SystemCoreClockUpdate:000000000000002b $d
     /tmp/ccFBOlTg.s:142    .text.SystemCoreClockUpdate:000000000000002c $t

NO UNDEFINED SYMBOLS
